name: workspace_melos

packages:
  - app/**
  - core/**
  - feature/**
  - tool/**

command:
  bootstrap:
    hooks:
      post: melos run setup

scripts:
  # usage: melos run setup
  setup:
    run: |
      melos exec -- rm -rf pubspec.lock &&
      melos run clean &&
      melos run pub_get &&
      melos run build_runner &&
      melos run build_example

  # usage: melos run analyze
  analyze:
    description: Analyze the project
    exec: dart analyze .

  # usage: melos run clean
  clean:
    run: melos exec -- flutter clean

  # usage: melos run update_packages
  update_packages:
    run: melos exec -- flutter update-packages --force-upgrade

  # usage: melos run pub_upgrade
  pub_upgrade:
    run: melos exec -- flutter pub upgrade

  # usage: melos run pub_get
  pub_get:
    run: melos exec -c 1 -- flutter pub get

  # usage: melos run build_runner
  # 프로젝트 전체 빌드 build_runner 실패해도 계속 진행
  # feature 단에서 공통 모듈을 참조하지 못하는 경고를 넘기기 위함
  build_runner:
    run: melos exec --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs || true

  # usage: melos run build_runner_clean
  build_runner_clean:
    run: melos exec --depends-on="build_runner" -- dart run build_runner clean

  # usage: melos run build_example
  build_example:
    run: melos exec --scope=example --depends-on="build_runner" -- dart run build_runner build --delete-conflicting-outputs
